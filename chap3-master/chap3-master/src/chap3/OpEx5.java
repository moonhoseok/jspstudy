package chap3;
/*
 * 비트연산자 : &(AND),|(OR),~(NOT),^(XOR)
 */
public class OpEx5 {
	public static void main(String[] args) {
		System.out.println(6 & 3);
		/*
		 * 6 : 00000110
		 * 3 : 00000011
		 * =============
		 * & : 00000010 => 2
		 */
		System.out.println(6 | 3);
		/*
		 * 6 : 00000110
		 * 3 : 00000011
		 * =============
		 * | : 00000111   => 7
		 */
		System.out.println(6 ^ 3);  //XOR : 배타적인 OR, 숫자가 다른경우 1, 숫자가 같은:0 
		/*
		 * 6 : 00000110
		 * 3 : 00000011
		 * =============
		 * ^ : 00000101  =>5
		 */
		System.out.println(~10); //-11. 0->1, 1->0
		/*
		 * 10 : 00001010
		 * ===============
		 * ~    11110101 => 부호비트:1 음수. 부호비트:0 양수.
		 *  => 음수를 2의 보수로 표현함. 
		 *  2의보수 : 1의 보수 + 1
		 *  보수의 보수는 원래숫자
		 *  11110101 ?의 2의 보수
		 *  
		 *  11110101 의 1의 보수
		 *  =========
		 *  00001010
		 *  
		 *  2의 보수 :00001010 + 1 => 00001011 : 11
		 */
		System.out.println("true & true :" + (true & true));
		System.out.println("true & false :" + (true & false));
	}
}
